name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Paso 1: Hacer checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar Python
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r flask_tienda/requirements.txt

      # Paso 4: Listar paquetes instalados
      - name: List installed packages
        run: pip list

      # Paso 5: Verificar los archivos en el directorio
      - name: Verify files in project directory
        run: |
          echo "Listando los archivos del proyecto:"
          ls -R

      # Paso 6: Establecer variables de entorno para la base de datos
      - name: Set up database environment variables
        run: |
          echo "SQLALCHEMY_DATABASE_URI=postgresql://user:password@localhost:5432/testdb" >> $GITHUB_ENV

      # Paso 7: Establecer PYTHONPATH y ejecutar las pruebas
      - name: Run tests
        run: |
          export PYTHONPATH=$(pwd)/flask_tienda
          pytest --maxfail=1 --disable-warnings -v  # Ejecutar pytest con más detalles de depuración

